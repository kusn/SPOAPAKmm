// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPOAPAKmmReceiver.Data;

namespace SPOAPAKmmReceiver.Migrations
{
    [DbContext(typeof(SPOAPAKmmDB))]
    [Migration("20220328045655_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.MeasPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AverageE")
                        .HasColumnType("REAL");

                    b.Property<double>("DX")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<double>("E")
                        .HasColumnType("REAL");

                    b.Property<int>("ElementId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ElementId");

                    b.ToTable("MeasPoints");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Measuring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Freq")
                        .HasColumnType("REAL");

                    b.Property<int>("MeasPointId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("P1")
                        .HasColumnType("REAL");

                    b.Property<double>("P2")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("MeasPointId");

                    b.ToTable("Measurings");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Device", b =>
                {
                    b.HasOne("SPOAPAKmmReceiver.Models.Room", "Room")
                        .WithMany("Devices")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Element", b =>
                {
                    b.HasOne("SPOAPAKmmReceiver.Models.Room", "Room")
                        .WithMany("Elements")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.MeasPoint", b =>
                {
                    b.HasOne("SPOAPAKmmReceiver.Models.Element", "Element")
                        .WithMany("Points")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Measuring", b =>
                {
                    b.HasOne("SPOAPAKmmReceiver.Models.MeasPoint", "MeasPoint")
                        .WithMany("Measurings")
                        .HasForeignKey("MeasPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasPoint");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Room", b =>
                {
                    b.HasOne("SPOAPAKmmReceiver.Models.Organization", "Organization")
                        .WithMany("Rooms")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Element", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.MeasPoint", b =>
                {
                    b.Navigation("Measurings");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Organization", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("SPOAPAKmmReceiver.Models.Room", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
